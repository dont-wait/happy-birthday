import React from 'react';
import { Gift, Fish, Gem, Users, Heart, Cake } from 'lucide-react';
import './App.css';
import './index.css';
import images from './images'
import fishvideo from './assets/fishvideo.mp4';
import fishvideo2 from './assets/fishvideo2.mp4';

const ANH_BA_INFO = {
  ten: "Anh Ba",
  tenThanMat: "Anh Ba D≈©ng", 
  loiChucChinh: "Ch√∫c anh tu·ªïi m·ªõi th√™m v·ªØng ch√£i, v·∫°n s·ª± hanh th√¥ng, gia ƒë√¨nh lu√¥n l√† ƒëi·ªÉm t·ª±a.",
  anhHero: images.aba2concunV2, 
  nguoiGui: "Em Trai C·ªßa Anh", 
};

const DANH_SACH_LOI_CHUC = [
  {
    nguoiGui: "T·ª´ Ba M·∫π",
    loiChuc: "Ch√∫c con trai c·ªßa ba m·∫π tu·ªïi m·ªõi lu√¥n m·∫°nh kh·ªèe, b√¨nh an v√† th√†nh c√¥ng tr√™n con ƒë∆∞·ªùng ƒë√£ ch·ªçn. Gia ƒë√¨nh lu√¥n t·ª± h√†o v·ªÅ con.",
    avatar: "https://placehold.co/100x100/3498db/ffffff?text=Ba+M·∫π"
  },
  {
    nguoiGui: "T·ª´ Anh Ch·ªã Em",
    loiChuc: "Ch√∫c m·ª´ng sinh nh·∫≠t anh Ba! Ch√∫c anh tu·ªïi m·ªõi ti·ªÅn v√†o nh∆∞ n∆∞·ªõc, m·ªçi d·ª± ƒë·ªãnh ƒë·ªÅu th√†nh c√¥ng m·ªπ m√£n nh√©!",
    avatar: "https://placehold.co/100x100/9b59b6/ffffff?text=ACE"
  },
  {
    nguoiGui: "T·ª´ B·∫°n B√® Th√¢n",
    loiChuc: "Happy birthday √¥ng b·∫°n! Tu·ªïi m·ªõi b·ªõt lo toan, th√™m nhi·ªÅu ni·ªÅm vui v√† lu√¥n gi·ªØ v·ªØng phong ƒë·ªô nh√©. H·∫πn b·ªØa nh·∫≠u!",
    avatar: "https://placehold.co/100x100/f1c40f/ffffff?text=B·∫°n+B√®"
  },
];

// Danh s√°ch ·∫£nh k·ª∑ ni·ªám gia ƒë√¨nh
const ANH_GIA_DINH = [
  { src: images.aba_self, caption: "Anh Ba t·ª± s∆∞·ªõng" },
  { src: images.aba_aoXanh, caption: "Anh Ba m·∫∑c √°o xanh" },
  { src: images.aba_chongdau, caption: "Anh Ba suy t∆∞" },
  { src: images.aba_nam_cungcho, caption: "Anh Ba n·∫±m c√πng c√∫n" },
  { src: images.aba_ochua, caption: "Anh Ba ƒëi ch√πa" },
  { src: images.aba_chatga, caption: "Anh Ba ch·∫∑t g√†" },
];

const useIntersectionObserver = (options) => {
  const [ref, setRef] = React.useState(null);
  const [isVisible, setIsVisible] = React.useState(false);

  React.useEffect(() => {
    const observer = new IntersectionObserver(([entry]) => {
      if (entry.isIntersecting) {
        setIsVisible(true);
        observer.unobserve(entry.target);
      }
    }, options);

    if (ref) {
      observer.observe(ref);
    }

    return () => {
      if (ref) {
        observer.unobserve(ref);
      }
    };
  }, [ref, options]);

  return [setRef, isVisible];
};

// Component section c√≥ hi·ªáu ·ª©ng fade-in
const AnimatedSection = ({ children, className = '' }) => {
  const [ref, isVisible] = useIntersectionObserver({ threshold: 0.1 });
  return (
    <section 
      ref={ref} 
      className={`transition-all duration-1000 ease-in-out transform ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 translate-y-10'} ${className}`}
    >
      {children}
    </section>
  );
};

const LoadingScreen = ({ onPlayMusic, isMusicPlaying, showIframe }) => (
  <div className="fixed inset-0 bg-[#1A2C47] flex flex-col justify-center items-center z-50">
    <style>
      {`
        @keyframes swim {
          0%, 100% { transform: translateX(-20px) rotate(-5deg); }
          50% { transform: translateX(20px) rotate(5deg); }
        }
        .fish-swimming {
          animation: swim 4s ease-in-out infinite;
        }
      `}
    </style>
    <div className="fish-swimming">
        <Fish className="text-amber-400" size={80} />
    </div>
    <p className="text-white text-lg mt-4 font-serif">ƒêang t·∫£i b·∫•t ng·ªù cho {ANH_BA_INFO.ten}...</p>
    {/* N√∫t b·∫≠t nh·∫°c n·ªÅn */}
    {!isMusicPlaying && (
      <button
        onClick={onPlayMusic}
        className="fixed top-8 right-8 px-5 py-2 bg-amber-400 text-blue-900 font-bold rounded-full shadow-lg hover:bg-amber-300 transition z-50"
      >
        <span role="img" aria-label="Loa">üîä</span> B·∫≠t nh·∫°c n·ªÅn
      </button>
    )}
    {/* Iframe nh·∫°c, ch·ªâ render sau khi ƒë√£ b·∫•m n√∫t */}
    {showIframe && (
      <iframe
        width="640"
        height="180"
        src="https://zingmp3.vn/embed/song/Z8Z98CU8?start=true"
        allow="autoplay"
        title="Nh·∫°c n·ªÅn"
      />
    )}
  </div>
);


// Banner ch√≠nh
const Hero = () => (
  <div className="h-screen w-full relative flex items-center justify-center text-center text-white p-4">
    <div 
      className="absolute inset-0 bg-cover bg-center z-0" 
      style={{ backgroundImage: `url(${ANH_BA_INFO.anhHero})` }}
    ></div>
    <div className="absolute inset-0 bg-black/60 z-10"></div>
    <div className="relative z-20 animate-fadeInUp">
      <h1 className="text-5xl md:text-7xl lg:text-8xl font-serif font-bold text-amber-400" style={{textShadow: '2px 2px 8px rgba(0,0,0,0.7)'}}>
        Ch√∫c M·ª´ng Sinh Nh·∫≠t
      </h1>
      <h2 className="text-4xl md:text-6xl lg:text-7xl font-serif font-bold mt-2 mb-6" style={{textShadow: '2px 2px 8px rgba(0,0,0,0.7)'}}>{ANH_BA_INFO.tenThanMat}</h2>
      <p className="max-w-2xl mx-auto text-lg md:text-xl font-light">
        {ANH_BA_INFO.loiChucChinh}
      </p>
    </div>
  </div>
);

// Ti√™u ƒë·ªÅ c·ªßa m·ªói ph·∫ßn
const SectionTitle = ({ icon: Icon, children }) => (
    <div className="flex items-center justify-center mb-12">
        <Icon className="text-amber-400 mr-4" size={32} />
        <h2 className="text-4xl font-serif font-bold text-gray-800">{children}</h2>
    </div>
);


// Ph·∫ßn s·ªü th√≠ch
const HobbySection = () => (
  <AnimatedSection className="py-20 px-4 bg-gray-50">
    <div className="container mx-auto">
      <div className="grid md:grid-cols-2 gap-16 items-stretch">
        {/* C·ªôt C√° C·∫£nh */}
        <div className="flex flex-col items-center md:items-start text-center md:text-left h-full">
          <div className="flex items-center mb-4">
            <Fish className="text-sky-600 mr-3" size={40}/>
            <h3 className="text-3xl font-serif text-sky-800">Th·∫ø Gi·ªõi Ng∆∞ C·∫£nh</h3>
          </div>
          <p className="text-gray-600 mb-6">
            N∆°i anh t√¨m th·∫•y s·ª± tƒ©nh t·∫°i, chi√™m nghi·ªám v·∫ª ƒë·∫πp c·ªßa t·ª± nhi√™n v√† nu√¥i d∆∞·ª°ng ni·ªÅm ƒëam m√™. M·ªói ch√∫ c√° nh∆∞ m·ªôt n√©t v·∫Ω t·∫°o n√™n b·ª©c tranh an y√™n trong t√¢m h·ªìn.
          </p>
          <video
            src={fishvideo}
            alt="H·ªì c√° Koi"
            className="rounded-lg shadow-xl w-full h-auto"
            controls
            autoPlay
            loop
            muted
          />
        </div>

        {/* C·ªôt Phong Th·ªßy */}
        <div className="flex flex-col items-center md:items-start text-center md:text-left h-full">
          <div className="flex items-center mb-4">
            <Gem className="text-emerald-600 mr-3" size={40}/>
            <h3 className="text-3xl font-serif text-emerald-800">NƒÉng L∆∞·ª£ng Phong Th·ªßy</h3>
          </div>
          <p className="text-gray-600 mb-6">
            Nh·ªØng v·∫≠t ph·∫©m kh√¥ng ch·ªâ ƒë·ªÉ trang tr√≠ m√† c√≤n l√† ngu·ªìn nƒÉng l∆∞·ª£ng t√≠ch c·ª±c, mang l·∫°i may m·∫Øn, t√†i l·ªôc v√† s·ª± th·ªãnh v∆∞·ª£ng cho anh v√† c·∫£ gia ƒë√¨nh.
          </p>
          <video
            src={fishvideo2}
            alt="Phong Th·ªßy"
            className="rounded-lg shadow-xl w-full h-auto"
            controls
            autoPlay
            loop
            muted
          />
        </div>
      </div>
    </div>
  </AnimatedSection>
);



// Ph·∫ßn k·ª∑ ni·ªám gia ƒë√¨nh
const FamilyGallery = () => (
  <AnimatedSection className="py-20 px-4 bg-white">
    <div className="container mx-auto">
      <SectionTitle icon={Users}>Kho·∫£nh Kh·∫Øc Th∆∞ gi·∫£n</SectionTitle>
      <p className="text-center text-gray-600 max-w-3xl mx-auto mb-12">
        M·ªói b·ª©c ·∫£nh l√† m·ªôt c√¢u chuy·ªán, m·ªôt k√Ω ·ª©c v√¥ gi√°. ƒê√¢y l√† nh·ªØng m·∫£nh gh√©p t·∫°o n√™n m·ªôt ng∆∞·ªùi anh ba ƒë√°ng tin c·∫≠y, l√†m ch·ªó d·ª±a cho c·∫£ gia ƒë√¨nh.
      </p>
      <div className="columns-2 md:columns-3 lg:columns-4 gap-4 space-y-4">
        {ANH_GIA_DINH.map((photo, index) => (
          <div key={index} className="overflow-hidden rounded-lg shadow-lg group relative break-inside-avoid">
            <img src={photo.src} alt={photo.caption} className="w-full h-auto object-cover transform transition-transform duration-500 group-hover:scale-110"/>
            <div className="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
              <p className="text-white text-center p-2 font-semibold">{photo.caption}</p>
            </div>
          </div>
        ))}
      </div>
    </div>
  </AnimatedSection>
);

// Ph·∫ßn L·ªùi ch√∫c
const WishesSection = () => (
  <AnimatedSection className="py-20 px-4 bg-gray-50">
    <div className="container mx-auto">
      <SectionTitle icon={Heart}>L·ªùi Ch√∫c T·ª´ Tr√°i Tim</SectionTitle>
      <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {DANH_SACH_LOI_CHUC.map((wish, index) => (
          <div key={index} className="bg-white p-8 rounded-xl shadow-lg border-t-4 border-amber-400 flex flex-col items-center text-center transform hover:-translate-y-2 transition-transform duration-300">
            <img src={wish.avatar} alt={wish.nguoiGui} className="w-24 h-24 rounded-full border-4 border-white -mt-20 shadow-md mb-4"/>
            <h4 className="text-xl font-semibold text-gray-800 font-serif">{wish.nguoiGui}</h4>
            <p className="text-gray-600 mt-2 flex-grow">"{wish.loiChuc}"</p>
          </div>
        ))}
      </div>
    </div>
  </AnimatedSection>
);

// H·ªôp qu√† b·∫•t ng·ªù cu·ªëi c√πng
const GiftBox = () => {
    const [isOpen, setIsOpen] = React.useState(false);

    return (
        <AnimatedSection className="py-20 px-4 bg-cover bg-fixed" style={{backgroundImage: "url('https://www.toptal.com/designers/subtlepatterns/uploads/double-bubble-outline.png')"}}>
            <div className="container mx-auto text-center">
                 <SectionTitle icon={Cake}>V√† M·ªôt M√≥n Qu√† Cu·ªëi...</SectionTitle>
                {!isOpen ? (
                    <div 
                        className="cursor-pointer inline-block group"
                        onClick={() => setIsOpen(true)}
                    >
                        <Gift className="text-rose-500 w-32 h-32 mx-auto transition-transform duration-500 group-hover:scale-110 group-hover:animate-bounce" />
                        <p className="mt-4 text-xl text-gray-700 font-semibold">B·∫•m v√†o ƒë√¢y ƒë·ªÉ m·ªü qu√† nh√©!</p>
                    </div>
                ) : (
                    <div className="bg-white/90 p-10 rounded-xl shadow-2xl max-w-2xl mx-auto animate-fadeInUp">
                        <h3 className="text-3xl font-bold font-serif text-rose-600">M√≥n qu√† l·ªõn nh·∫•t...</h3>
                        <p className="text-gray-700 text-lg mt-4">
                            ...ch√≠nh l√† t√¨nh c·∫£m c·ªßa c·∫£ gia ƒë√¨nh lu√¥n ·ªü b√™n c·∫°nh anh. Ch√∫c anh m·ªôt sinh nh·∫≠t th·∫≠t tr·ªçn v·∫πn, ·∫•m √°p v√† ng·∫≠p tr√†n h·∫°nh ph√∫c.
                        </p>
                        <p className="font-bold text-xl mt-6">Y√™u Anh Ba!</p>
                        {/* Ch√®n ·∫£nh khi m·ªü qu√† */}
                        <img 
                            src={images.aba_man}
                            alt="Qu√† B·∫•t Ng·ªù" 
                            className="mt-6 rounded-lg shadow-lg mx-auto"
                        />
                    </div>
                )}
            </div>
        </AnimatedSection>
    )
      
}


// Ch√¢n trang
const Footer = () => (
    <footer className="bg-[#1A2C47] text-center p-6 text-gray-400">
        <p>M·ªôt m√≥n qu√† nh·ªè t·ª´ <span className="font-bold text-amber-400">{ANH_BA_INFO.nguoiGui}</span> ‚ù§Ô∏è</p>
        <p className="text-sm mt-1">&copy; 2025 - M√£i l√† gia ƒë√¨nh.</p>
    </footer>
)

// Component ch√≠nh c·ªßa ·ª©ng d·ª•ng
export default function App() {
  const [loading, setLoading] = React.useState(true);

  React.useEffect(() => {
    const timer = setTimeout(() => setLoading(false), 3000); // Th·ªùi gian ch·ªù 3 gi√¢y
    return () => clearTimeout(timer);
  }, []);
  
  // Th√™m CSS cho animation
  React.useEffect(() => {
    const style = document.createElement('style');
    style.innerHTML = `
      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translate3d(0, 40px, 0);
        }
        to {
          opacity: 1;
          transform: translate3d(0, 0, 0);
        }
      }
      .animate-fadeInUp {
        animation: fadeInUp 1s ease-out forwards;
      }
    `;
    document.head.appendChild(style);
    return () => {
      document.head.removeChild(style);
    };
  }, []);

  if (loading) {
    return <LoadingScreen />;
  }

  return (
    <div className="bg-white font-sans">
      <Hero />
      <main>
        <HobbySection />
        

        <FamilyGallery />
        <WishesSection />
        <GiftBox />
      </main>
      <Footer />
    </div>
  );
}
